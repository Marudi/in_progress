{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseInstanceName": {
      "type":"string",
      "metadata":{
        "description":"Base name use for domainNameLabel and unique Azure object name"
      }
    },
    "environment": {
      "type": "string",
      "metadata": {
        "description": "Deployment environment"
      }
    },
    "tier": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "skuSize": {
      "type": "string",
      "defaultValue": "Standard_Small"
    },
    "capacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "defaultValue": 1,
      "maxValue": 5
    },
    "frontendCertData": {
      "type": "string",
      "metadata": {
        "description": "Base-64 encoded form of the .pfx file. This is the cert terminating on the Application Gateway."
      }
    },
    "frontendCertPassword": {
      "type": "string",
      "metadata": {
        "description": "Password for .pfx certificate"
      }
    }
  },
  "variables": {
    "resourceGroupId": "[resourceGroup().id]",
    "location": "[resourceGroup().location]",
    "clusterName": "SFCluster",
    "domainNameLabel": "[tolower(concat(parameters('baseInstanceName'), '-', parameters('environment')))]",
    "applicationGatewayName": "[tolower(concat(parameters('baseInstanceName'), '-appgateway-', parameters('environment')))]",
    "subnetName": "Subnet-AppGateway",
    "idleTimeoutInMinutes": 4,
    "publicIpAddressName": "appgateway-public-ip",
    "virtualNetworkName": "VNet",
    "vnetId": "[concat(variables('resourceGroupId'),'/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName'))]",

    "BFFVMSSPoolName": "appGatewayBFFVMSSBackendPool",

    "BFF_StaticFile_Port": 22002,
    "SF_ReverseProxy_Port": 19081
  },

  "resources": [
    {
      "name": "[variables('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('skuSize')]",
          "tier": "[parameters('tier')]",
          "capacity": "[parameters('capacity')]"
        },
        "sslCertificates": [
          {
            "name": "appGatewayFrontEndSslCert",
            "properties": {
              "data": "[parameters('frontendCertData')]",
              "password": "[parameters('frontendCertPassword')]"
            }
          }
        ],
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('publicIPRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "Default_HTTPS_Port",
            "properties": {
              "port": 443
            }
          }
        ],
        "httpListeners": [
          {
            "name": "Default_Listener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/Default_HTTPS_Port')]"
              },
              "Protocol": "Https",
              "SslCertificate": {
                "Id": "[concat(variables('applicationGatewayID'), '/sslCertificates/appGatewayFrontEndSslCert')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('BFFVMSSPoolName')]"
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "SF_ReverseProxy_HttpSettings",
            "properties": {
              "Port": "[variables('SF_ReverseProxy_Port')]",
              "Protocol": "Http",
              "Path": "",
              "CookieBasedAffinity": "Disabled",
              "probe": {
                "id": "[concat(variables('applicationGatewayID'), '/probes/sf-reverseProxy-Probe')]"
              }
            }
          },
          {
            "name": "BFF_StaticFile_HttpSettings",
            "properties": {
              "Port": "[variables('BFF_StaticFile_Port')]",
              "Protocol": "Http",
              "Path": "/",
              "CookieBasedAffinity": "Disabled"
            }
          }
        ],
        "urlPathMaps": [
          {
            "name": "rule_Default_MultiPorts",
            "properties": {
              "defaultBackendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBFFVMSSBackendPool')]"
              },
              "defaultBackendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/BFF_StaticFile_HttpSettings')]"
              },
              "pathRules": [
                {
                  "name": "ASPlatform_Identity",
                  "properties": {
                    "paths": [
                      "/ASPlatform/Infra_IdentityService/*"
                    ],
                    "backendAddressPool": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBFFVMSSBackendPool')]"
                    },
                    "backendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/SF_ReverseProxy_HttpSettings')]"
                    }
                  },
                  "type": "Microsoft.Network/applicationGateways/urlPathMaps/pathRules"
                },
                {
                  "name": "ASPlatform_FlightTracker",
                  "properties": {
                    "paths": [
                      "/ASPlatform/BFF_FlightTracker/*"
                    ],
                    "backendAddressPool": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBFFVMSSBackendPool')]"
                    },
                    "backendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/SF_ReverseProxy_HttpSettings')]"
                    }
                  },
                  "type": "Microsoft.Network/applicationGateways/urlPathMaps/pathRules"
                },
                {
                  "name": "ASPlatform_ImageProvider",
                  "properties": {
                    "paths": [
                      "/ASPlatform/BFF_ImageProvider/*"
                    ],
                    "backendAddressPool": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBFFVMSSBackendPool')]"
                    },
                    "backendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/SF_ReverseProxy_HttpSettings')]"
                    }
                  },
                  "type": "Microsoft.Network/applicationGateways/urlPathMaps/pathRules"
                },
                {
                  "name": "ASPlatform_TileServer",
                  "properties": {
                    "paths": [
                      "/ASPlatform/BFF_TileServer/*"
                    ],
                    "backendAddressPool": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBFFVMSSBackendPool')]"
                    },
                    "backendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/SF_ReverseProxy_HttpSettings')]"
                    }
                  },
                  "type": "Microsoft.Network/applicationGateways/urlPathMaps/pathRules"
                },
                {
                  "name": "ASPlatform_WmsServer",
                  "properties": {
                    "paths": [
                      "/ASPlatform/BFF_WmsServer/*"
                    ],
                    "backendAddressPool": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBFFVMSSBackendPool')]"
                    },
                    "backendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/SF_ReverseProxy_HttpSettings')]"
                    }
                  },
                  "type": "Microsoft.Network/applicationGateways/urlPathMaps/pathRules"
                }                
              ]
            },
            "type": "Microsoft.Network/applicationGateways/urlPathMaps"
          }
        ],
        "requestRoutingRules": [
          {
            "name": "rule_Default_MultiPorts",
            "properties": {
              "ruleType": "PathBasedRouting",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/Default_Listener')]"
              },
              "urlPathMap": {
                "id": "[concat(variables('applicationGatewayID'), '/urlPathMaps/rule_Default_MultiPorts')]"
              }
            },
            "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
          }
        ],
        "probes": [
          {
            "name": "sf-reverseProxy-Probe",
            "properties": {
              "protocol": "Http",
              "host": "127.0.0.1",
              "path": "/",
              "interval": 300,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": false,
              "minServers": 0,
              "match": {
                "statusCodes": [
                  "400"
                ]
              }
            },
            "type": "Microsoft.Network/applicationGateways/probes"
          }
        ],
        "sslPolicy": {
          "policyType": "Predefined",
          "policyName": "AppGwSslPolicy20150501"
        }
      }
    },
    {
      "apiVersion": "2017-08-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpAddressName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": "[variables('idleTimeoutInMinutes')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('domainNameLabel')]"
        }
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      }
    }
  ]
}