{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "deploymentEnvironment": {
            "type": "string",
            "allowedValues": [
                "DEVELOPMENT",
                "STAGING",
                "PRODUCTION"
            ]
        },
        "environment": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "VNetResourceGroup": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Name of Administrator user on the VM"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "PWD of Administrator user on the VM"
            }
        },
        "EnvironmentSize": {
            "type": "string",
            "defaultValue": "medium",
            "allowedValues": [
                "small",
                "medium",
                "large"
            ],
            "metadata": {
                "description": "Medium for regular development. Large for Machine Learning development"
            }
        }
    },
    "variables": {
        "suffix": "[uniqueString(resourceGroup().id, resourceGroup().location)]",
        "VMName": "[toLower(concat(variables('virtualMachineName'), variables('suffix')))]",
        "resourceGroupName": "[toLower(resourceGroup().name)]",
        "TS-Size":{
            "small":{
                "VMSize": "Standard_D1_v2"
            },
            "medium":{
                "VMSize": "Standard_D1_v2"
            },
            "large":{
                "VMSize": "Standard_D2_v2"
            }
        },
        
        "virtualMachineName": "[concat('SOA-ASP-FT-', parameters('environment'), '-01')]",
        "ftwebSubnet":"[concat('SOA-ASP-FT-', parameters('deploymentEnvironment'), '-subnet')]",
        "subnetName":"[concat(parameters('VNetResourceGroup'),'/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('ftwebSubnet'))]",

        "virtualNetworkName": "[concat('SOA-ASP-CL-',parameters('deploymentEnvironment'), '-VNET')]",
        "networkInterfaceName": "[toLower(concat(variables('VMName'),'-nic-', variables('suffix')))]",
        "networkSecurityGroupName": "[toLower(concat(variables('VMName'),'-nsg-', variables('suffix')))]",
        "diagnosticsStorageAccountName": "[substring(concat(variables('resourceGroupName'), 'diag', variables('suffix')), 0, 24)]",
        "diagnosticsStorageAccountType": "Standard_LRS",
        "diagnosticsStorageAccountKind": "Storage",
        "addressPrefix": "[resourceId(parameters('VNetResourceGroup'), 'Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "subnetPrefix": "[resourceId(parameters('VNetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('ftwebSubnet'))]",
        "publicIpAddressName": "[toLower(concat(variables('VMName'),'-pip'))]",
        "publicIpAddressType": "Static",
        "publicIpAddressSku": "Basic",
        "autoShutdownStatus": "Disabled",
        "autoShutdownTime": "18:00",
        "autoShutdownTimeZone": "Eastern Standard Time",
        "autoShutdownNotificationStatus": "Disabled",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]"
    },
    "resources": [
        {
            "name": "[variables('VMName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[variables('VMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[variables('TS-Size')[parameters('EnvironmentSize')].VMSize]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftVisualStudio",
                        "offer": "VisualStudio",
                        "sku": "VS-2017-Ent-Latest-Win10-N",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
                    }
                }
            }
        },
        {
            "name": "[concat('shutdown-computevm-', variables('VMName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[parameters('location')]",
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('VMName'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "timeInMinutes": "30"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('VMName'))]"
            ]
        },
        {
            "name": "[variables('diagnosticsStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "kind": "[variables('diagnosticsStorageAccountKind')]",
            "properties": {
                "accountType": "[variables('diagnosticsStorageAccountType')]"
            }
        },
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2017-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            }
        }
        /* {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]
            }
        } */
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}