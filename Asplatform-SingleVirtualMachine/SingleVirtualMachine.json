{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "envName": {
      "allowedValues": [
        "STAGE",
        "DEV",
        "PROD"
      ],
      "type": "String",
      "metadata": {
        "description": "Environment in which this client is being deployed"
      }
    },
    "adminUsername": {
      "type": "String",
      "defaultValue": "Asadmin",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "clientName": {
      "type": "String",
      "defaultValue": "AA",
      "metadata": {
        "description": "Name of client being deployed"
      }
    },
    "windowsOSVersion": {
      "defaultValue": "2019-Datacenter",
      "allowedValues": [
        "2016-Datacenter-with-Containers",
        "2016-Datacenter",
        "2019-Datacenter"
      ],
      "type": "String",
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "EnvironmentSize": {
      "defaultValue": "small",
      "allowedValues": [
        "small",
        "medium",
        "large"
      ],
      "type": "String",
      "metadata": {
        "description": "Small for regular development."
      }
    },
    "location": {
      "defaultValue": "[resourceGroup().location]",
      "type": "String",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "Asplatform-DSCArchiveFolder":{
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Location for storage of DSC configuration"
      }
    },
    "artifactsLocation":{
      "type": "string",
      "defaultValue": "https://asplatformresources.blob.core.windows.net/configuration?st=2019-12-05T15%3A29%3A21Z&se=2019-12-06T15%3A29%3A21Z&sp=rcl&sv=2018-03-28&sr=c&sig=3q6gu0xD7gmMfyZxtPF0DsiI6jRTfwBO4vaqPwp8TSI%3D",
      "metadata": {
        "description": "Exact folder location"
      }
    },

  //https://asplatformresources.blob.core.windows.net/configuration?st=2019-12-04T21%3A48%3A31Z&se=2021-07-23T21%3A48%3A00Z&sp=racwdl&sv=2018-03-28&sr=c&sig=Bm3pxbbe4x2BSzlCkdrpSclVWgAp44FWVdFTRk2Mm9c%3D

    "artifactsLocationSasToken":{
      "type": "string",
      "defaultValue": "sv=2019-02-02&ss=b&srt=sco&sp=rwdlac&se=2022-05-20T22:47:23Z&st=2019-12-05T15:47:23Z&spr=https,http&sig=%2BongMRHELBwGTUe9bSY8%2F57c0HP80vYpQJCy2s4wMFY%3D",
      "metadata": {
        "description": "SAS token for the Blob storage"
      }
    },
    "Asplatform-DSCfile":{
      "type": "string",
      "defaultValue": "Asplatform-DSC.ps1",
      "metadata": {
        "description": "DSC configuration file name"
      }
    },
    "hostingResourceGroupName": {
      "defaultValue": "ASPlatform-Central",
      "type": "String",
      "metadata": {
        "description": "ResourceGroup containing the hosting VNet."
      }
    },
    "hostingVNetName": {
      "defaultValue": "ASPlatform-VNet",
      "type": "String",
      "metadata": {
        "description": "VNet that will be hosting this VM."
      }
    },
    "hostingSubnetName": {
      "defaultValue": "ASPlatform_NG_Subnet",
      "type": "String",
      "metadata": {
        "description": "Subnet that will be hosting this VM."
      }
    }

  },
  "variables": {
    "VMName": "[toUpper(concat('SOA-', parameters('envName'),'-',parameters('clientName'), '-01'))]",
    "ts_size": {
      "small": {
        "VMSize": "Standard_A1_v2"
      },
      "medium": {
        "VMSize": "Standard_D1_v2"
      },
      "large": {
        "VMSize": "Standard_D2_v2"
      }
    },
    "hostingVirtualNetworkName": "[concat('resourceGroups/', parameters('hostingResourceGroupName'), '/providers/Microsoft.Network/', parameters('hostingVNetName'))]",
    "vnetID": "[resourceId(parameters('hostingResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('hostingVNetName'))]",

    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('hostingSubnetName'))]",
    "networkSecurityGroupName": "[toUpper(concat('NG-', parameters('clientName'),'-NSG'))]",
    "nicName": "[concat('NG-', parameters('clientName'), '-nic')]",
    "storageAccountName": "[toLower(concat(parameters('clientName'), 'storage',uniquestring(resourceGroup().id)))]"
  },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-11-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
              "securityRules": [
                {
                  "name": "Deny_All_Inbound",
                  "properties": {
                    "description": "block all traffic except what we've explicitly allowed",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Deny",
                    "priority": 300,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "GatewayHealth_All_to_65503-65534",
                  "properties": {
                    "description": "Allow Application Gateway Health communication within the vnet",
                    "access": "Allow",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "65503-65534",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "priority": 298,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "Azure_LB_to_Any",
                  "properties": {
                    "description": "Allow Azure LB to any port",
                    "access": "Allow",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "AzureLoadBalancer",
                    "destinationAddressPrefix": "*",
                    "priority": 299,
                    "direction": "Inbound"
                  }
                },
                {
                  "name": "ASPlatform_AppGateway_to_NG",
                  "properties": {
                    "description": "Allow requests coming from AppGateway to the Front Facing services. This is needed for AppGateway & healthcheck & ReverseProxy",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRanges": [ "443" ],
                    "sourceAddressPrefix": "VirtualNetwork",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 200,
                    "direction": "Inbound"
                  }
                }
              ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-11-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                             "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
                }
            }           
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[variables('VMName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('ts_size')[parameters('EnvironmentSize')].VMSize]"
                },
                "osProfile": {
                    "computerName": "[variables('VMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
              {
                "type": "extensions",
                "apiVersion": "2018-10-01",
                "name": "Microsoft.Powershell.DSC",
                "location": "[parameters('location')]",
                "dependsOn": [
                  "[resourceId('Microsoft.Compute/virtualMachines', variables('VMName'))]"
                ],
                "tags": {
                  "displayName": "Asplatform-DSC"
                },
                "properties": {
                  "publisher": "Microsoft.Powershell",
                  "type": "DSC",
                  "typeHandlerVersion": "2.9",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "configuration": {
                      "url": "[concat(parameters('artifactsLocation'), '/', parameters('Asplatform-DSCArchiveFolder'), '/', parameters('Asplatform-DSCfile'))]",
                      "script": "Asplatform-DSC.ps1",
                      "function": "Main"
                    },
                    "configurationArguments": {
                      "nodeName": "[variables('VMName')]"
                    }
                  },
                  "protectedSettings": {
                    "configurationUrlSasToken": "[parameters('artifactsLocationSasToken')]"
                    }
                  }
                }
                
              ]
            }
    ],
    "outputs": {
    }
}