{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
            "allowedValues": [
                "STAGING",
                "DEVELOPMENT",
                "PRODUCTION"
            ],
            "type": "String",
            "metadata": {
                "description": "Environment in which this client is being deployed"
            }
        },
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "clientName": {
            "type": "String",
            "metadata": {
                "description": "Name of client being deployed"
            }
        },
        "windowsOSVersion": {
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                "2016-Datacenter-with-Containers",
                "2016-Datacenter",
                "2019-Datacenter"
            ],
            "type": "String",
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_A2_v2",
            "type": "String",
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "EnvironmentSize": {
            "defaultValue": "medium",
            "allowedValues": [
                "small",
                "medium",
                "large"
            ],
            "type": "String",
            "metadata": {
                "description": "Medium for regular development. Large for Machine Learning development"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "_artifactsLocation": {
            "type": "String",
            "metadata": {
                "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "SecureString",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            }
        }
    },
    "variables": {
        "suffix": "[uniqueString(resourceGroup().id, resourceGroup().location)]",
        "VMName": "[concat('SOA-ASP-', parameters('clientName'), '-01')]",
        "ts_size": {
            "small": {
                "VMSize": "Standard_A1_v2"
            },
            "medium": {
                "VMSize": "Standard_D1_v2"
            },
            "large": {
                "VMSize": "Standard_D2_v2"
            }
        },
        "centralVnetName": "VNet-asplatform-demo",
        "centralResourceGroupName": "DeleteME",
        "centralVirtualNetworkName": "[concat('resourceGroups/', variables('centralResourceGroupName'), '/providers/Microsoft.Network/', variables('centralVnetName'))]",
        "vnetID": "[concat(variables('centralResourceGroupName'),'/providers/Microsoft.Network/virtualNetworks/', variables('centralVirtualNetworkName'), '/')]",
        "subnetName": "Subnet-0",
        "addressPrefix": "[concat(variables('centralResourceGroupName'),'/Microsoft.Network/virtualNetworks/', variables('centralVirtualNetworkName'), '/subnets/', variables('subnetName'))]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('centralVnetName'), variables('subnetName'))]",
        "dnsLabelPrefix": "[concat('soa-', parameters('clientName'))]",
        "Asplatform-VirtualMachineDSCArchiveFileName": "Asplatform-VirtualMachineDSC.zip",
        "Asplatform-VirtualMachineDSCArchiveFolder": "DSC",
        "networkSecurityGroupName": "[concat(parameters('clientName'),'-NSG')]",
        "nicName": "[concat(parameters('clientName'), '-nic')]",
        "publicIPAddressName": "[concat(parameters('environment'), '-pip')]",
        "storageAccountName": "[toLower(concat(parameters('clientName'), uniquestring(resourceGroup().id)))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-11-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-11-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsLabelPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-3389",
                        "properties": {
                            "priority": 1000,
                            "access": "Allow",
                            "direction": "Inbound",
                            "destinationPortRange": "3389",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-11-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[variables('VMName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('ts_size')[parameters('EnvironmentSize')].VMSize]"
                },
                "osProfile": {
                    "computerName": "[variables('VMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "apiVersion": "2016-03-30",
                    "name": "Microsoft.Powershell.DSC",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('VMName'))]"
                    ],
                    "tags": {
                        "displayName": "Asplatform-VirtualMachineDSC"
                    },
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "configuration": {
                                "url": "[concat(parameters('_artifactsLocation'), '/', variables('Asplatform-VirtualMachineDSCArchiveFolder'), '/', variables('Asplatform-VirtualMachineDSCArchiveFileName'))]",
                                "script": "Asplatform-VirtualMachineDSC.ps1",
                                "function": "Main"
                            },
                            "configurationArguments": {
                                "nodeName": "[variables('VMName')]"
                            }
                        },
                        "protectedSettings": {
                            "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {
        "hostname": {
            "type": "String",
            "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        }
    }
}