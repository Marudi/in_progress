<?xml version="1.0" encoding="utf-8"?>
<AggregatorConfiguration>

  <!-- This rule will cause an infinite loop -->
  <rule name="History_InfiniteLoop1" appliesTo="Task">
    <![CDATA[
    // self.Fields["History"].Value = "Hello";
    self.History = "Hello";
    ]]>
  </rule>

  <!-- This rule will cause an infinite loop -->
  <rule name="History_InfiniteLoop2" appliesTo="Task">
    <![CDATA[
    string current = (string) self.Fields["History"].Value;
    if (!current.StartsWith("---"))
    {
      logger.Log("Current History value is '{0}'", current);
      self.History = "---Hello";
    }
    ]]>
  </rule>

  <!-- This rule properly implements a check to avoid an infinite loop -->
  <rule name="History_NoLoop" appliesTo="Task">
    <![CDATA[
    const string HistoryMarker = "===";
    
    var lastRevision = self.LastRevision;
    var history = lastRevision.Fields["History"];
    string lastValue = (string) history.Value;
    
    logger.Log("At revision {0} History value is '{1}'", lastRevision.Index, lastValue);
    
    if (!lastValue.StartsWith(HistoryMarker))
    {
      self.History = HistoryMarker + "Hello";
      logger.Log("Marker added");
    }
    ]]>
  </rule>

  <policy name="DefaultPolicy">
    <collectionScope collections="*" />
    <!--<ruleRef name="History_InfiniteLoop1" />-->
    <!--<ruleRef name="History_InfiniteLoop2" />-->
    <!--<ruleRef name="History_Dump" />-->
    <ruleRef name="History_NoLoop" />
  </policy>

</AggregatorConfiguration>
