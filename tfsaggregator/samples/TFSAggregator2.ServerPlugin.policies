<?xml version="1.0" encoding="utf-8"?>
<AggregatorConfiguration>
    
    <!-- Configure TFS Aggregator behavior. (Once, Optional)
     - **debug**: turns on debugging options (Optional, default: False)
    -->
    <runtime debug="false">
        <!--
        TBD
        -->
        <rateLimiting interval="00:00:01.0" changes="5" />
        <!--
        The level of logging. (Optional)
            * Critical
            * Error
            * Warning
            * Information or Normal - default value
            * Verbose
            * Diagnostic.
            -->
        <logging level="Normal" />
        <!--
        The language used to express the rules. (Optional)
        Valid values are:
            * CS,CSHARP,C# - default value
            * VB,VB.NET,VBNET
            * PS,POWERSHELL - *Experimental*!
        -->
        <script language="C#" />
        <!--
        autoImpersonate false (default) use the TFS Service account, true the user requesting. (Optional)
        -->
        <authentication autoImpersonate="false" />
    </runtime>
    
    
    
    <!-- An aggregation rule. (Repeatable)
     - **name**: The name of this aggregation rule. (Mandatory)
     - **appliesTo**: The name of the work item type that this aggregation will target. (Optional)
     - **hasFields**: The work item must have the listed fields for the rule to apply. (List, Optional)
    -->
    <rule name="MyFirstRule" appliesTo="Task" hasFields="Title">
        <!--
         The script to execute when the rule triggers.
         Use CDATA(http://www.w3.org/TR/REC-xml/#sec-cdata-sect) to wrap script code.
 
         The self ($self in PowerShell) variable contains the work item that triggered the plugin.
         The store variable represents the current Collection's Work Items.
         The logger variable allows to add a trace message to the log output via the `Log` method.
        -->
        <![CDATA[
        logger.Log("Hello, World from {1} #{0}!", self.Id, self.TypeName);
        ]]>
    </rule>
    
    <!-- add more rules as needed -->
    
    
    
    <!-- Represent a set of aggregation rules that apply to a particular scope. (Repeatable)
    - **name**: The name of this policy. (Mandatory)
    -->
    <policy name="MyFirstPolicy">
        <!-- Scope the policy to a list of collections. (Optional)
        - **collections**: The TFS Collection to which the policy applies. (List, Mandatory)
        '*' means any Collection
        -->
        <collectionScope collections="DefaultCollection" />
        <!-- Scope the policy to Team Projects using a particular Process Template.
        - **name**: Name of Process Template matching. (Optional)
            (Not working due to Microsoft not setting these values for on-premise installations)
        - **typeId**: Process Template GUID to match. (Optional)
        - **minVersion**: Minimum version for Process Template. (Optional)
        - **maxVersion**: Minimum version for Process Template. (Optional)
        -->
        <templateScope name="Scrum" />
        <!-- Microsoft Visual Studio Scrum 2013.4
        <templateScope typeId="6B724908-EF14-45CF-84F8-768B5384DA45" minVersion="3" maxVersion="3" />
        -->
        <!-- Scope the policy to listed Team Projects.
         - **projects**: List of Team Project names. (List, Mandatory)
        -->
        <projectScope projects="TfsAggregatorTest1" />
        
        <!-- Reference to a previously declared rule.-->
        <ruleRef name="MyFirstRule" />
        
        <!-- add more rule reference as needed -->
        
    </policy>
    
    <!-- add more policies as needed -->
    
</AggregatorConfiguration>
