{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sitaIP": {
      "type": "string",
      "defaultValue": "57.188.38.0/24"
    },
    "privateIpAddress": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "[parameters('adminUsername')]"
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "[parameters('adminPassword')]"
    },
    "domainNameLabel": {
      "type": "string",
      "metadata": {
        "description": ".eastus.cloudapp.azure.com"
      }
    },
    "EnvironmentSize": {
      "type": "string",
        "defaultValue": "medium",
        "allowedValues" : [
            "medium",
            "large"
      ],
      "metadata": {
        "description": "Medium for Standard deployes aand Large for higher work loads"
          }
    },
    "autoShutdownStatus": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Enabled"
    },
    "autoShutdownTime": {
      "type": "string",
      "defaultValue": "18:00",
      "allowedValues": [
        "18:00",
        "20:00"          
      ]
    },
    "autoShutdownTimeZone": {
      "type": "string",
      "defaultValue": "Eastern Standard Time"
    },
    "autoShutdownNotificationStatus": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Disabled"
    }
  },
  "variables": {
    "virtualNetworkName": "VNet",
  "TS-Size": {
      "medium": {
      "VMssize": "Standard_D1_v2",
      "maxScale": 1
      },
      "large": {
      "VMSize": "Standard_D2_v2",
      "maxScale": 1
      }
  },
    "subnetName": "Subnet-Management",
    "vmSize": "[variables('TS-Size')[parameters('EnvironmentSize')].VMSize]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "location": "[resourceGroup().location]",
    "virtualMachineName": "VM-Bastion",
    "networkInterfaceName": "NIC-Bastion",
    "networkSecurityGroupName": "NSG-Bastion",
    "publicIpAddressName": "IP-Bastion",
    "publicIpAddressType": "Static",
    "publicIpAddressSku": "Basic",
    "extensions_IaaSAntimalware_name": "IaaSAntimalware"
  },
  "resources": [
    {
      "name": "[variables('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2016-04-30-preview",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('TS-Size')[parameters('EnvironmentSize')].VMSize]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsDesktop",
            "offer": "Windows-10",
            "sku": "RS3-ProN",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "licenseType": "Windows_Client"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachineName'), '/', variables('extensions_IaaSAntimalware_name'))]",
      "apiVersion": "2017-12-01",
      "location": "[variables('location')]",
      "scale": null,
      "properties": {
        "autoUpgradeMinorVersion": true,
        "settings": {
          "AntimalwareEnabled": true,
          "RealtimeProtectionEnabled": "true",
          "ScheduledScanSettings": {
            "isEnabled": "false",
            "day": "7",
            "time": "120",
            "scanType": "Quick"
          },
          "Exclusions": {
            "Extensions": "",
            "Paths": "",
            "Processes": ""
          }
        },
        "publisher": "Microsoft.Azure.Security",
        "type": "[variables('extensions_IaaSAntimalware_name')]",
        "typeHandlerVersion": "1.3"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]"
      ]
    },
    {
      "apiVersion": "2017-08-01",
      "type": "Microsoft.Network/publicIpAddresses",
      "name": "[variables('publicIpAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[toLower(parameters('domainNameLabel'))]"
        }
      },
      "sku": {
        "name": "[variables('publicIpAddressSku')]"
      }
    },
    {
      "name": "[variables('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "primary": true,
              "privateIPAddress": "[parameters('privateIpAddress')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-06-01",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SITA_to_RDP",
            "properties": {
              "priority": 100,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "[parameters('sitaIP')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
        ]
      }
    },
    {
      "name": "[concat('shutdown-computevm-', variables('virtualMachineName'))]",
      "type": "Microsoft.DevTestLab/schedules",
      "apiVersion": "2017-04-26-preview",
      "location": "[variables('location')]",
      "properties": {
        "status": "[parameters('autoShutdownStatus')]",
        "taskType": "ComputeVmShutdownTask",
        "dailyRecurrence": {
          "time": "[parameters('autoShutdownTime')]"
        },
        "timeZoneId": "[parameters('autoShutdownTimeZone')]",
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]",
        "notificationSettings": {
          "status": "[parameters('autoShutdownNotificationStatus')]",
          "timeInMinutes": "30"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
      ]
    }

  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    }
  }
}