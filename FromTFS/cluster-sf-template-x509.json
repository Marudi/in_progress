{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "metadata": {
        "description": "Deployment environment"
      }
    },
    "dns": {
      "type": "string"
    },
    "bffSubnetCIDR": {
      "type": "string"
    },
    "backendSubnetCIDR": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "asAdmin",
      "metadata": {
        "description": "Remote desktop user Id"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Remote desktop user password. Must be a strong password"
      }
    },
    "vmImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer"
    },
    "vmImageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer"
    },
    "vmImageSku": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter"
    },
    "clusterProtectionLevel": {
      "type": "string",
      "allowedValues": [
        "None",
        "Sign",
        "EncryptAndSign"
      ],
      "defaultValue": "EncryptAndSign",
      "metadata": {
        "description": "Protection level.Three values are allowed - EncryptAndSign, Sign, None. It is best to keep the default of EncryptAndSign, unless you have a need not to"
      }
    },
    "sourceVaultValue": {
      "type": "string",
      "metadata": {
        "description": "Resource Id of the key vault, is should be in the format of /subscriptions/<Sub ID>/resourceGroups/<Resource group name>/providers/Microsoft.KeyVault/vaults/<vault name>"
      }
    },
    "primaryCertificateThumbprint": {
      "type": "string",
      "metadata": {
        "description": "Certificate Thumbprint"
      }
    },
    "primaryCertificateUrlValue": {
      "type": "string",
      "metadata": {
        "description": "Refers to the location URL in your key vault where the certificate was uploaded, it is should be in the format of https://<name of the vault>.vault.azure.net:443/secrets/<exact location>"
      }
    },
    "secondaryCertificateThumbprint": {
      "type": "string",
      "metadata": {
        "description": "Certificate Thumbprint"
      }
    },
    "secondaryCertificateUrlValue": {
      "type": "string",
      "metadata": {
        "description": "Refers to the location URL in your key vault where the certificate was uploaded, it is should be in the format of https://<name of the vault>.vault.azure.net:443/secrets/<exact location>"
      }
    },
    "adminClientCertificateUrlValue": {
      "type": "string"
    },
    "adminClientCertificateThumbprint": {
      "type": "string"
    },
    "readOnlyClientCertificateUrlValue": {
      "type": "string"
    },
    "readOnlyClientCertificateThumbprint": {
      "type": "string"
    },
    "environmentSize": {
      "type": "string",
      "defaultValue": "small-dev",
      "allowedValues": [
        "small",
        "small-dev",
        "medium",
        "medium-dev",
        "large"
      ],
      "metadata": {
        "description": "Medium for Standard deployes aand Large for higher work loads"
      }
    }
  },
  "variables": {
    "clusterName": "SFCluster",
    "virtualNetworkName": "VNet",
    "subnetBackendName": "Subnet-Backend",
    "subnetBFFName": "Subnet-BFF",
    "resourceGroupId": "[resourceGroup().id]",
    "clusterLocation": "[resourceGroup().location]",

    "vnetID": "[concat(variables('resourceGroupId'),'/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
    "subnetBackendRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetBackendName'))]",
    "subnetBFFRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetBFFName'))]",

    "vmssApiVersion": "2017-03-30",
    "lbApiVersion": "2015-06-15",
    "storageApiVersion": "2016-01-01",
    "publicIPApiVersion": "2015-06-15",

    "dnsName": "[tolower(concat(parameters('dns'),'-',parameters('environment')))]",
    "ntbffDnsName": "[concat(variables('dnsName'),'-','ntbff')]",
    "vmNodeType0Name": "NTBackend",
    "vmNodeType1Name": "NTBFF",
    "nt0applicationStartPort": 20000,
    "nt0applicationEndPort": 30000,
    "nt0ephemeralStartPort": 49152,
    "nt0ephemeralEndPort": 65534,
    "nt0fabricTcpGatewayPort": 19000,
    "nt0fabricHttpGatewayPort": 19080,
    "nt0reverseProxyEndpointPort": 19081,

    "nt1applicationStartPort": 20000,
    "nt1applicationEndPort": 30000,
    "nt1ephemeralStartPort": 49152,
    "nt1ephemeralEndPort": 65534,
    "nt1fabricTcpGatewayPort": 19000,
    "nt1fabricHttpGatewayPort": 19080,
    "nt1reverseProxyEndpointPort": 19081,

    "computeLocation": "[variables('clusterLocation')]",
    "overProvision": "false",

    "lbIPName": "PublicIP-LB-FE",

    "lbID1": "[resourceId('Microsoft.Network/loadBalancers', concat('LB','-', variables('clusterName'),'-',variables('vmNodeType1Name')))]",
    "lbIPConfig1": "[concat(variables('lbID1'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
    "lbPoolID1": "[concat(variables('lbID1'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "lbProbeID1": "[concat(variables('lbID1'),'/probes/FabricGatewayProbe')]",
    "lbHttpProbeID1": "[concat(variables('lbID1'),'/probes/FabricHttpGatewayProbe')]",

    "applicationGatewayName": "[concat(parameters('dns'), '-appgateway-', parameters('environment'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName'))]",
    "backendPoolID": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBFFVMSSBackendPool')]",

    "vmImageVersion": "latest",
    "storageAccountType": "Standard_LRS",
    "supportLogStorageAccountType": "Standard_LRS",
    "supportLogStorageAccountName": "[toLower( concat('sflogs', uniqueString(resourceGroup().id),'2'))]",
    "applicationDiagnosticsStorageAccountType": "Standard_LRS",
    "applicationDiagnosticsStorageAccountName": "[toLower(concat(uniqueString(resourceGroup().id), '3' ))]",
    "nicName": "NIC",
    "ts_size": {
      "small-dev": {
        "vmNodeType0Size": "Standard_A2_V2",
        "ntBackendInstanceCount": 3,
        "vmNodeType1Size": "Standard_A2_V2",
        "nt1InstanceCount": 2,
        "durability": "Bronze"
      },
      "medium-dev": {
        "vmNodeType0Size": "Standard_A2_V2",
        "ntBackendInstanceCount": 3,
        "vmNodeType1Size": "Standard_A2_V2",
        "nt1InstanceCount": 2,
        "durability": "Bronze"
      },
      "small": {
        "vmNodeType0Size": "Standard_D1_V2",
        "ntBackendInstanceCount": 3,
        "vmNodeType1Size": "Standard_D1_V2",
        "nt1InstanceCount": 2,
        "durability": "Bronze"
      },
      "medium": {
        "vmNodeType0Size": "Standard_D2_V3",
        "ntBackendInstanceCount": 3,
        "vmNodeType1Size": "Standard_D2_V3",
        "nt1InstanceCount": 2,
        "durability": "Bronze"
      },
      "large": {
        "vmNodeType0Size": "Standard_D3_V2",
        "ntBackendInstanceCount": 3,
        "vmNodeType1Size": "Standard_D3_V2",
        "nt1InstanceCount": 2,
        "durability": "Bronze"
      }
    },
    "vmNodeType0Size": "[variables('ts_size')[parameters('environmentSize')].vmNodeType0Size]",
    "ntBackendInstanceCount": "[variables('ts_size')[parameters('environmentSize')].ntBackendInstanceCount]",
    "vmNodeType1Size": "[variables('ts_size')[parameters('environmentSize')].vmNodeType1Size]",
    "nt1InstanceCount": "[variables('ts_size')[parameters('environmentSize')].nt1InstanceCount]",
    "sfDurability": "[variables('ts_size')[parameters('environmentSize')].durability]"
  },
  "resources": [
    {
      "apiVersion": "[variables('storageApiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('supportLogStorageAccountName')]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [],
      "properties": {},
      "kind": "Storage",
      "sku": {
        "name": "[variables('supportLogStorageAccountType')]"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      }
    },
    {
      "apiVersion": "[variables('storageApiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('applicationDiagnosticsStorageAccountName')]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [],
      "properties": {},
      "kind": "Storage",
      "sku": {
        "name": "[variables('applicationDiagnosticsStorageAccountType')]"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      }
    },
    {
      "apiVersion": "[variables('publicIPApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lbIPName')]",
      "location": "[variables('computeLocation')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('ntbffDnsName')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      }
    },
    {
      "apiVersion": "[variables('lbApiVersion')]",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[concat('LB','-', variables('clusterName'),'-',variables('vmNodeType1Name'))]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',variables('lbIPName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerIPConfig",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbIPName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBEAddressPool",
            "properties": {}
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID1')]"
              },
              "backendPort": "[variables('nt1fabricTcpGatewayPort')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "[variables('nt1fabricTcpGatewayPort')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[variables('lbProbeID1')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "LBHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID1')]"
              },
              "backendPort": "[variables('nt1fabricHttpGatewayPort')]",
              "enableFloatingIP": "false",
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "[variables('nt1fabricHttpGatewayPort')]",
              "idleTimeoutInMinutes": "5",
              "probe": {
                "id": "[variables('lbHttpProbeID1')]"
              },
              "protocol": "tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "FabricGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('nt1fabricTcpGatewayPort')]",
              "protocol": "tcp"
            }
          },
          {
            "name": "FabricHttpGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('nt1fabricHttpGatewayPort')]",
              "protocol": "tcp"
            }
          }
        ],
        "inboundNatPools": []
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      }
    },
    {
      "apiVersion": "[variables('vmssApiVersion')]",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('vmNodeType0Name')]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
      ],
      "identity": {
        "type": "systemAssigned"
      },
      "properties": {
        "overprovision": "[variables('overProvision')]",
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('vmImagePublisher')]",
              "offer": "[parameters('vmImageOffer')]",
              "sku": "[parameters('vmImageSku')]",
              "version": "[variables('vmImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[variables('storageAccountType')]"
              }
            }
          },
          "osProfile": {
            "adminPassword": "[parameters('adminPassword')]",
            "adminUsername": "[parameters('adminUsername')]",
            "computernamePrefix": "[variables('vmNodeType0Name')]",
            "secrets": [
              {
                "sourceVault": {
                  "id": "[parameters('sourceVaultValue')]"
                },
                "vaultCertificates": [
                  {
                    "certificateStore": "My",
                    "certificateUrl": "[parameters('primaryCertificateUrlValue')]"
                  },
                  {
                    "certificateStore": "My",
                    "certificateUrl": "[parameters('secondaryCertificateUrlValue')]"
                  },
                  {
                    "certificateStore": "My",
                    "certificateUrl": "[parameters('adminClientCertificateUrlValue')]"
                  },
                  {
                    "certificateStore": "My",
                    "certificateUrl": "[parameters('readOnlyClientCertificateUrlValue')]"
                  }
                ]
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(variables('nicName'), '-0')]",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "[concat(variables('nicName'),'-',0)]",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnetBackendRef')]"
                        }
                      }
                    }
                  ],
                  "primary": true
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "[concat(variables('vmNodeType0Name'),'_ServiceFabricNode')]",
                "properties": {
                  "type": "ServiceFabricNode",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
                    "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
                  },
                  "publisher": "Microsoft.Azure.ServiceFabric",
                  "settings": {
                    "clusterEndpoint": "[reference(variables('clusterName')).clusterEndpoint]",
                    "nodeTypeRef": "[variables('vmNodeType0Name')]",
                    "dataPath": "C:\\\\SvcFab",
                    "durabilityLevel": "[variables('sfDurability')]",
                    "enableParallelJobs": true,
                    "nicPrefixOverride": "[parameters('backendSubnetCIDR')]",
                    "certificate": {
                      "thumbprint": "[parameters('primaryCertificateThumbprint')]",
                      "thumbprintSecondary": "[parameters('secondaryCertificateThumbprint')]",
                      "x509StoreName": "My"
                    }
                  },
                  "typeHandlerVersion": "1.0"
                }
              },
              {
                "name": "[concat('VMDiagnosticsVmExt','_vmNodeType0Name')]",
                "properties": {
                  "type": "IaaSDiagnostics",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
                    "storageAccountEndPoint": "https://core.windows.net/"
                  },
                  "publisher": "Microsoft.Azure.Diagnostics",
                  "settings": {
                    "WadCfg": {
                      "DiagnosticMonitorConfiguration": {
                        "overallQuotaInMB": "50000",
                        "EtwProviders": {
                          "EtwEventSourceProviderConfiguration": [
                            {
                              "provider": "Microsoft-ServiceFabric-Actors",
                              "scheduledTransferKeywordFilter": "1",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableActorEventTable"
                              }
                            },
                            {
                              "provider": "Microsoft-ServiceFabric-Services",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                              }
                            }
                          ],
                          "EtwManifestProviderConfiguration": [
                            {
                              "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                              "scheduledTransferLogLevelFilter": "Information",
                              "scheduledTransferKeywordFilter": "4611686018427387904",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricSystemEventTable"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
                  },
                  "typeHandlerVersion": "1.5"
                }
              },
              {
                "name": "ManagedIdentityWindowsExtension",
                "properties": {
                  "publisher": "Microsoft.ManagedIdentity",
                  "type": "ManagedIdentityExtensionForWindows",
                  "typeHandlerVersion": "1.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "port": 50342
                  }
                }
              }
            ]
          }
        }
      },
      "sku": {
        "name": "[variables('vmNodeType0Size')]",
        "capacity": "[variables('ntBackendInstanceCount')]",
        "tier": "Standard"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      }
    },
    {
      "apiVersion": "[variables('vmssApiVersion')]",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('vmNodeType1Name')]",
      "location": "[variables('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', concat('LB','-', variables('clusterName'),'-',variables('vmNodeType1Name')))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "overprovision": "[variables('overProvision')]",
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "[concat(variables('vmNodeType1Name'),'_ServiceFabricNode')]",
                "properties": {
                  "type": "ServiceFabricNode",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
                    "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
                  },
                  "publisher": "Microsoft.Azure.ServiceFabric",
                  "settings": {
                    "clusterEndpoint": "[reference(variables('clusterName')).clusterEndpoint]",
                    "nodeTypeRef": "[variables('vmNodeType1Name')]",
                    "dataPath": "C:\\\\SvcFab",
                    "durabilityLevel": "[variables('sfDurability')]",
                    "enableParallelJobs": true,
                    "nicPrefixOverride": "[parameters('bffSubnetCIDR')]",
                    "certificate": {
                      "thumbprint": "[parameters('primaryCertificateThumbprint')]",
                      "thumbprintSecondary": "[parameters('secondaryCertificateThumbprint')]",
                      "x509StoreName": "My"
                    }
                  },
                  "typeHandlerVersion": "1.0"
                }
              },
              {
                "name": "[concat('VMDiagnosticsVmExt','_vmNodeType1Name')]",
                "properties": {
                  "type": "IaaSDiagnostics",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
                    "storageAccountEndPoint": "https://core.windows.net/"
                  },
                  "publisher": "Microsoft.Azure.Diagnostics",
                  "settings": {
                    "WadCfg": {
                      "DiagnosticMonitorConfiguration": {
                        "overallQuotaInMB": "50000",
                        "EtwProviders": {
                          "EtwEventSourceProviderConfiguration": [
                            {
                              "provider": "Microsoft-ServiceFabric-Actors",
                              "scheduledTransferKeywordFilter": "1",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableActorEventTable"
                              }
                            },
                            {
                              "provider": "Microsoft-ServiceFabric-Services",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                              }
                            }
                          ],
                          "EtwManifestProviderConfiguration": [
                            {
                              "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                              "scheduledTransferLogLevelFilter": "Information",
                              "scheduledTransferKeywordFilter": "4611686018427387936",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricSystemEventTable"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
                  },
                  "typeHandlerVersion": "1.5"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(variables('nicName'), '-1')]",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "[concat(variables('nicName'),'-',1)]",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[variables('lbPoolID1')]"
                          }
                        ],
                        "ApplicationGatewayBackendAddressPools": [
                          {
                            "id": "[variables('backendPoolID')]"
                          }
                        ],
                        "subnet": {
                          "id": "[variables('subnetBFFRef')]"
                        }
                      }
                    }
                  ],
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminPassword": "[parameters('adminPassword')]",
            "adminUsername": "[parameters('adminUsername')]",
            "computernamePrefix": "[variables('vmNodeType1Name')]",
            "secrets": [
              {
                "sourceVault": {
                  "id": "[parameters('sourceVaultValue')]"
                },
                "vaultCertificates": [
                  {
                    "certificateStore": "My",
                    "certificateUrl": "[parameters('primaryCertificateUrlValue')]"
                  },
                  {
                    "certificateStore": "My",
                    "certificateUrl": "[parameters('secondaryCertificateUrlValue')]"
                  },
                  {
                    "certificateStore": "My",
                    "certificateUrl": "[parameters('adminClientCertificateUrlValue')]"
                  },
                  {
                    "certificateStore": "My",
                    "certificateUrl": "[parameters('readOnlyClientCertificateUrlValue')]"
                  }
                ]
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('vmImagePublisher')]",
              "offer": "[parameters('vmImageOffer')]",
              "sku": "[parameters('vmImageSku')]",
              "version": "[variables('vmImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[variables('storageAccountType')]"
              }
            }
          }
        }
      },
      "sku": {
        "name": "[variables('vmNodeType1Size')]",
        "capacity": "[variables('nt1InstanceCount')]",
        "tier": "Standard"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      }
    },
    {
      "apiVersion": "2017-07-01-preview",
      "type": "Microsoft.ServiceFabric/clusters",
      "name": "[variables('clusterName')]",
      "location": "[variables('clusterLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/',variables('lbIPName'))]"
      ],
      "properties": {
        "addonFeatures": [],
        "certificate": {
          "thumbprint": "[parameters('primaryCertificateThumbprint')]",
          "thumbprintSecondary": "[parameters('secondaryCertificateThumbprint')]",
          "x509StoreName": "My"
        },
        "clientCertificateCommonNames": [],
        "clientCertificateThumbprints": [
          {
            "certificateThumbprint": "[parameters('adminClientCertificateThumbprint')]",
            "isAdmin": true
          },
          {
            "certificateThumbprint": "[parameters('readOnlyClientCertificateThumbprint')]",
            "isAdmin": false
          }
        ],
        "clusterState": "Default",
        "diagnosticsStorageAccountConfig": {
          "blobEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.blob]",
          "protectedAccountKeyName": "StorageAccountKey1",
          "queueEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.queue]",
          "storageAccountName": "[variables('supportLogStorageAccountName')]",
          "tableEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.table]"
        },
        "fabricSettings": [
          {
            "name": "Security",
            "parameters": [
              {
                "name": "ClusterProtectionLevel",
                "value": "[parameters('clusterProtectionLevel')]"
              }
            ]
          },
          {
            "name": "ClusterManager",
            "parameters": [
              {
                "name": "EnableDefaultServicesUpgrade",
                "value": "true"
              }
            ]
          }
        ],
        "managementEndpoint": "[concat('https://',reference(concat('Microsoft.Network/publicIPAddresses/',variables('lbIPName'))).dnsSettings.fqdn,':',variables('nt1fabricHttpGatewayPort'))]",
        "nodeTypes": [
          {
            "name": "[variables('vmNodeType0Name')]",
            "applicationPorts": {
              "endPort": "[variables('nt0applicationEndPort')]",
              "startPort": "[variables('nt0applicationStartPort')]"
            },
            "clientConnectionEndpointPort": "[variables('nt0fabricTcpGatewayPort')]",
            "durabilityLevel": "[variables('sfDurability')]",
            "ephemeralPorts": {
              "endPort": "[variables('nt0ephemeralEndPort')]",
              "startPort": "[variables('nt0ephemeralStartPort')]"
            },
            "httpGatewayEndpointPort": "[variables('nt0fabricHttpGatewayPort')]",
            "isPrimary": true,
            "placementProperties": {
              "nodeType": "backend"
            },
            "reverseProxyEndpointPort": "[variables('nt0reverseProxyEndpointPort')]",
            "vmInstanceCount": "[variables('ntBackendInstanceCount')]"
          },
          {
            "name": "[variables('vmNodeType1Name')]",
            "applicationPorts": {
              "endPort": "[variables('nt1applicationEndPort')]",
              "startPort": "[variables('nt1applicationStartPort')]"
            },
            "clientConnectionEndpointPort": "[variables('nt1fabricTcpGatewayPort')]",
            "durabilityLevel": "[variables('sfDurability')]",
            "ephemeralPorts": {
              "endPort": "[variables('nt1ephemeralEndPort')]",
              "startPort": "[variables('nt1ephemeralStartPort')]"
            },
            "httpGatewayEndpointPort": "[variables('nt1fabricHttpGatewayPort')]",
            "isPrimary": false,
            "placementProperties": {
              "nodeType": "BFF"
            },
            "reverseProxyEndpointPort": "[variables('nt1reverseProxyEndpointPort')]",
            "vmInstanceCount": "[variables('nt1InstanceCount')]"
          }
        ],
        "provisioningState": "Default",
        "reliabilityLevel": "[variables('sfDurability')]",
        "upgradeMode": "Manual",
        "vmImage": "Windows"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      }
    }
  ],
  "outputs": {
    "clusterProperties": {
      "value": "[reference(variables('clusterName'))]",
      "type": "object"
    }
  }
}